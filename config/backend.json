{
  "openapi": "3.1.0",
  "info": { "title": "NanoRes Cloud", "version": "0.1.0" },
  "paths": {
    "/api/auth/login": {
      "post": {
        "tags": ["auth"],
        "summary": "Login",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/LoginFields" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UserInfo" } }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/HTTPError" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["auth"],
        "summary": "Logout",
        "operationId": "logout",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": { "type": "string", "title": "Authorization" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/SuccessResponse" } }
            }
          },
          "401": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/HTTPError" } }
            },
            "description": "Unauthorized"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/auth/forgot-password": {
      "post": {
        "tags": ["auth"],
        "summary": "Forgot Password",
        "operationId": "forgot_password",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Email" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/SuccessResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/auth/email-verification": {
      "post": {
        "tags": ["auth"],
        "summary": "Send Email Verification",
        "operationId": "send_email_verification",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Email" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/SuccessResponse" } }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/HTTPError" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "post": {
        "tags": ["users"],
        "summary": "Register",
        "operationId": "register",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/RegisFields" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/SuccessResponse" } }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/HTTPError" } }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/HTTPError" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "tags": ["users"],
        "summary": "Me",
        "description": "鉴权用户,从header中读取\n:return:",
        "operationId": "me",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": { "type": "string", "title": "Authorization" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UserInfo" } }
            }
          },
          "401": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/HTTPError" } }
            },
            "description": "Unauthorized"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/users/password": {
      "get": {
        "tags": ["users"],
        "summary": "Check Email Token",
        "operationId": "check_email_token",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      },
      "post": {
        "tags": ["users"],
        "summary": "Update Password",
        "operationId": "update_password",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/api/configs": {
      "post": {
        "tags": ["configs"],
        "summary": "Create Config",
        "operationId": "create_config",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": { "type": "string", "title": "Authorization" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ConfigFields" } }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/SuccessResponse" } }
            }
          },
          "401": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/HTTPError" } }
            },
            "description": "Unauthorized"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["configs"],
        "summary": "Get Configs",
        "operationId": "get_configs",
        "parameters": [
          {
            "name": "current",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "title": "Current" }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "title": "Page Size" }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": { "type": "string", "title": "Authorization" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/ConfigItem" },
                  "title": "Response Get Configs Api Configs Get"
                }
              }
            }
          },
          "204": { "description": "No Configs" },
          "401": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/HTTPError" } }
            },
            "description": "Unauthorized"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/configs/{id}": {
      "put": {
        "tags": ["configs"],
        "summary": "Update Config",
        "operationId": "update_config",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/SuccessResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["configs"],
        "summary": "Delete Config",
        "operationId": "delete_config",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/SuccessResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ConfigFields": {
        "properties": {
          "owner": { "type": "string", "title": "Owner" },
          "name": { "type": "string", "maxLength": 255, "title": "Name" },
          "description": { "type": "string", "title": "Description", "default": "" },
          "type": { "$ref": "#/components/schemas/ConfigType" },
          "na": { "type": "number", "maximum": 1.5, "minimum": 0.5, "title": "Na" },
          "wavelength": { "type": "number", "maximum": 1.2, "minimum": 0.4, "title": "Wavelength" },
          "refractive_index": {
            "type": "number",
            "maximum": 1.6,
            "minimum": 1.0,
            "title": "Refractive Index"
          },
          "pixel_size": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.05,
            "title": "Pixel Size"
          },
          "camera_offset": {
            "type": "integer",
            "maximum": 1000.0,
            "minimum": 0.0,
            "title": "Camera Offset"
          },
          "camera_gain": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.1,
            "title": "Camera Gain"
          },
          "drift_correction": { "type": "boolean", "title": "Drift Correction" },
          "bi_plane_distance": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.05,
            "title": "Bi Plane Distance",
            "default": 0.05
          },
          "subregion_size": {
            "type": "integer",
            "maximum": 40.0,
            "minimum": 3.0,
            "title": "Subregion Size",
            "default": 11
          },
          "segmentation_intensity_threshold": {
            "type": "number",
            "maximum": 200.0,
            "minimum": 0.0,
            "title": "Segmentation Intensity Threshold",
            "default": 40
          },
          "segmentation_distance_threshold": {
            "anyOf": [{ "type": "integer", "maximum": 20.0, "minimum": 0.0 }, { "type": "null" }],
            "title": "Segmentation Distance Threshold"
          },
          "single_molecule_intensity_rejection_threshold": {
            "type": "number",
            "maximum": 1000.0,
            "minimum": 0.0,
            "title": "Single Molecule Intensity Rejection Threshold",
            "default": 500
          },
          "single_molecule_log_likelihood_rejection_threshold": {
            "type": "number",
            "maximum": 2000.0,
            "minimum": 0.0,
            "title": "Single Molecule Log Likelihood Rejection Threshold",
            "default": 500
          },
          "single_molecule_localization_precision_rejection_threshold": {
            "type": "number",
            "maximum": 0.05,
            "minimum": 0.0,
            "title": "Single Molecule Localization Precision Rejection Threshold",
            "default": 0.01
          },
          "z_reconstruction_range": {
            "type": "integer",
            "maximum": 4.0,
            "minimum": 0.0,
            "title": "Z Reconstruction Range",
            "default": 3
          },
          "z_psf_library_step_size": {
            "anyOf": [{ "type": "number", "maximum": 0.2, "minimum": 0.0 }, { "type": "null" }],
            "title": "Z Psf Library Step Size"
          }
        },
        "type": "object",
        "required": [
          "owner",
          "name",
          "type",
          "na",
          "wavelength",
          "refractive_index",
          "pixel_size",
          "camera_offset",
          "camera_gain",
          "drift_correction"
        ],
        "title": "ConfigFields"
      },
      "ConfigItem": {
        "properties": {
          "owner": { "type": "string", "title": "Owner" },
          "name": { "type": "string", "maxLength": 255, "title": "Name" },
          "description": { "type": "string", "title": "Description", "default": "" },
          "type": { "$ref": "#/components/schemas/ConfigType" },
          "na": { "type": "number", "maximum": 1.5, "minimum": 0.5, "title": "Na" },
          "wavelength": { "type": "number", "maximum": 1.2, "minimum": 0.4, "title": "Wavelength" },
          "refractive_index": {
            "type": "number",
            "maximum": 1.6,
            "minimum": 1.0,
            "title": "Refractive Index"
          },
          "pixel_size": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.05,
            "title": "Pixel Size"
          },
          "camera_offset": {
            "type": "integer",
            "maximum": 1000.0,
            "minimum": 0.0,
            "title": "Camera Offset"
          },
          "camera_gain": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.1,
            "title": "Camera Gain"
          },
          "drift_correction": { "type": "boolean", "title": "Drift Correction" },
          "bi_plane_distance": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.05,
            "title": "Bi Plane Distance",
            "default": 0.05
          },
          "subregion_size": {
            "type": "integer",
            "maximum": 40.0,
            "minimum": 3.0,
            "title": "Subregion Size",
            "default": 11
          },
          "segmentation_intensity_threshold": {
            "type": "number",
            "maximum": 200.0,
            "minimum": 0.0,
            "title": "Segmentation Intensity Threshold",
            "default": 40
          },
          "segmentation_distance_threshold": {
            "anyOf": [{ "type": "integer", "maximum": 20.0, "minimum": 0.0 }, { "type": "null" }],
            "title": "Segmentation Distance Threshold"
          },
          "single_molecule_intensity_rejection_threshold": {
            "type": "number",
            "maximum": 1000.0,
            "minimum": 0.0,
            "title": "Single Molecule Intensity Rejection Threshold",
            "default": 500
          },
          "single_molecule_log_likelihood_rejection_threshold": {
            "type": "number",
            "maximum": 2000.0,
            "minimum": 0.0,
            "title": "Single Molecule Log Likelihood Rejection Threshold",
            "default": 500
          },
          "single_molecule_localization_precision_rejection_threshold": {
            "type": "number",
            "maximum": 0.05,
            "minimum": 0.0,
            "title": "Single Molecule Localization Precision Rejection Threshold",
            "default": 0.01
          },
          "z_reconstruction_range": {
            "type": "integer",
            "maximum": 4.0,
            "minimum": 0.0,
            "title": "Z Reconstruction Range",
            "default": 3
          },
          "z_psf_library_step_size": {
            "anyOf": [{ "type": "number", "maximum": 0.2, "minimum": 0.0 }, { "type": "null" }],
            "title": "Z Psf Library Step Size"
          },
          "id": { "type": "string", "title": "Id" },
          "created_at": { "type": "string", "format": "date-time", "title": "Created At" },
          "updated_at": { "type": "string", "format": "date-time", "title": "Updated At" }
        },
        "type": "object",
        "required": [
          "owner",
          "name",
          "type",
          "na",
          "wavelength",
          "refractive_index",
          "pixel_size",
          "camera_offset",
          "camera_gain",
          "drift_correction",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "ConfigItem"
      },
      "ConfigType": {
        "type": "string",
        "enum": ["2D", "3D_SINGLE_PLANE", "3D_BI_PLANE"],
        "title": "ConfigType"
      },
      "Email": {
        "properties": { "email": { "type": "string", "format": "email", "title": "Email" } },
        "type": "object",
        "required": ["email"],
        "title": "Email"
      },
      "HTTPError": {
        "properties": { "detail": { "type": "string", "title": "Detail" } },
        "type": "object",
        "required": ["detail"],
        "title": "HTTPError"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "LoginFields": {
        "properties": {
          "password": {
            "type": "string",
            "pattern": "^(?![A-z0-9]+$)(?=.[^%&',;=?$\"])(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{8,20}$",
            "title": "Password"
          },
          "email": { "type": "string", "format": "email", "title": "Email" }
        },
        "type": "object",
        "required": ["password", "email"],
        "title": "LoginFields"
      },
      "RegisFields": {
        "properties": {
          "password": {
            "type": "string",
            "pattern": "^(?![A-z0-9]+$)(?=.[^%&',;=?$\"])(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{8,20}$",
            "title": "Password"
          },
          "name": { "type": "string", "pattern": "^[一-龥a-zA-Z0-9]+$", "title": "Name" },
          "email": { "type": "string", "format": "email", "title": "Email" },
          "verification_code": { "type": "string", "title": "Verification Code" }
        },
        "type": "object",
        "required": ["password", "name", "email", "verification_code"],
        "title": "RegisFields"
      },
      "SuccessResponse": {
        "properties": { "message": { "type": "string", "title": "Message" } },
        "type": "object",
        "required": ["message"],
        "title": "SuccessResponse",
        "description": "Simple success response"
      },
      "UserInfo": {
        "properties": {
          "name": { "type": "string", "pattern": "^[一-龥a-zA-Z0-9]+$", "title": "Name" },
          "id": { "type": "string", "title": "Id" },
          "email": { "type": "string", "format": "email", "title": "Email" },
          "access_token": { "type": "string", "title": "Access Token" },
          "refresh_token": { "type": "string", "title": "Refresh Token" },
          "expires_at": { "type": "string", "format": "date-time", "title": "Expires At" },
          "token_type": { "type": "string", "title": "Token Type" }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "email",
          "access_token",
          "refresh_token",
          "expires_at",
          "token_type"
        ],
        "title": "UserInfo"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    }
  }
}
